{"name":"HVClientLibPHP","tagline":"An easy to use PHP library to connect to Microsoft® HealthVault™.","body":"HVClientLibPHP\r\n==============\r\n\r\nAn easy to use PHP library to connect to\r\n[Microsoft® HealthVault™](https://www.healthvault.com/)\r\non top of\r\n[HVRawConnectorPHP](https://github.com/mkalkbrenner/HVRawConnectorPHP/).\r\nIt adds a nicer object oriented programming interface and hides (most) of the\r\ncomplicated XML parts in the HealthVault protocol.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nHVClientLibPHP depends on\r\n[HVRawConnectorPHP](https://github.com/mkalkbrenner/HVRawConnectorPHP/).\r\n\r\nYou can simply use composer to install HVRawConnectorPHP and it's dependencies.\r\n\r\nTo add HVClientLibPHP as a library in your project, add something like that to\r\nthe 'require' section of your `composer.json`:\r\n\r\n```json\r\n{\r\n  \"require\": {\r\n    \"biologis/hv-client-lib\": \"dev-master\"\r\n  }\r\n}\r\n```\r\n\r\nEarlier version of HVClientLibPHP could also be installed by pear including all\r\nit's dependencies:\r\n\r\n    pear channel-discover pear.biologis.com\r\n    pear channel-discover pear.querypath.org\r\n    pear install biologis/HVClient\r\n\r\nThis method will install HVClientLibPHP as a library, but without the\r\navailable demo application.\r\n\r\n\r\nStatus\r\n------\r\n\r\nHVClientLibPHP is not a full featured HealthVault SDK, but should provide all\r\nthe required stuff to create powerful HealthVault applications with PHP.\r\n\r\nIt can basically handle all\r\n[Things](http://developer.healthvault.com/pages/types/types.aspx) already,\r\nbut over the time we will add some more convenience function to the representing\r\nclasses.\r\n\r\nBut the number of implemented\r\n[Methods](http://developer.healthvault.com/pages/methods/methods.aspx) is very\r\nlimited at the moment (the essential ones are available):\r\n* GetPersonInfo\r\n* GetThings\r\n* PutThings\r\n\r\nIf you need more and understand the available\r\n[Documentation](http://developer.healthvault.com/default.aspx), you can always\r\nuse HVRawConnectorPHP directly. In that case you should ideally contribute your\r\nwork to let HVClientLibPHP grow faster.\r\n\r\n\r\nUsage\r\n-----\r\n\r\nThis is a simple example to display all weight measurements:\r\n\r\n```php\r\n$hv = new HVClient($yourAppId, $_SESSION);\r\n$hv->connect($yourCertThumbPrint, $yourPrivateKey);\r\n\r\n$personInfo = $hv->getPersonInfo();\r\n$recordId = $personInfo->selected_record_id;\r\n\r\n$things = $hv->getThings('Weight Measurement', $recordId);\r\nforeach ($things as $thing) {\r\n  print $thing->weight->value->kg;\r\n}\r\n```\r\n\r\nConnect a different HealthVault™ instance using a different country and\r\nlanguage:\r\n\r\n```php\r\n$hv = new HVClient($yourAppId, $_SESSION);\r\n\r\n$hv->setHealthVaultPlatform(\r\n  'https://platform.healthvault-ppe.co.uk/platform/wildcat.ashx');\r\n$hv->setLanguage('de');\r\n$hv->setCountry('DE');\r\n\r\n$hv->connect($yourCertThumbPrint, $yourPrivateKey);\r\n```\r\n\r\nTo connect your PHP based HealthVault™ app, your app needs to authorized by\r\nthe user and the user himself needs to be authenticated against HealthVault™.\r\nIf any of these requirements are not met, HVClientLibPHP throws corresponding\r\nexceptions. In this case you can create a link that takes the user to\r\nHealthVault™ to authenticate himself and to authorize your app and takes him\r\nback to your site afterwards:\r\n\r\n```php\r\n$hv = new HVClient($yourAppId, $_SESSION);\r\n\r\ntry {\r\n  $hv->connect($yourCertThumbPrint, $yourPrivateKey);\r\n  $personInfo = $hv->getPersonInfo();\r\n}\r\ncatch (HVRawConnectorUserNotAuthenticatedException $e) {\r\n print '<a href=\"' .\r\n   $hv->getAuthenticationURL($yourReturnURL) .\r\n   \">Authenticate</a>';\r\n}\r\n```\r\n\r\nFor more examples have a look at the demo_app source code included in\r\nHVClientLibPHP.\r\n\r\nThe HVClientLibPHP will never provide an API to register a new HealthVault™ app\r\nor to guide you through the on-boarding process, because this could be easily\r\ndone using the\r\n[Application Configuration Center](http://config.healthvault-ppe.com/).\r\n\r\nSo register your app there first and start coding afterwards.\r\n\r\nThe demo_app (aka Hello World) is already registered. For your first tests you\r\ncan also use it's credentials to start right away.\r\n\r\n\r\nDemo\r\n----\r\n\r\nThe demo_app included in this repository currently demonstrates two features:\r\n* It queries a user's HealthVault record for all\r\n\"[Things](http://developer.healthvault.com/pages/types/types.aspx)\" and dumps the\r\nraw XML content.\r\n* It lists all files uploaded to your selected health record and lets you upload\r\nadditional files.\r\n\r\nBy default it uses the US pre production instance of HealthVault.\r\n\r\nTo get started, follow the install instructions above and put the demo_app folder\r\non a web server and access \"demo_app/index.php\".\r\n\r\n\r\nLicence\r\n-------\r\n\r\n[GPLv2](https://raw.github.com/mkalkbrenner/HVClientLibPHP/master/LICENSE.txt).\r\n\r\n\r\nSponsor\r\n-------\r\n[bio.logis](https://www.biologis.com) offers users of\r\n[pgsbox.de](https://pgsbox.de) a way to upload their diagnostic reports to\r\nHealthVault.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}